(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{135:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return d}));var i=t(2),a=t(9),o=(t(0),t(177)),r={title:"Definitions"},c={id:"reference/koin-core/definitions",isDocsHomePage:!1,title:"Definitions",description:"By using Koin, you describe definitions in modules. In this section we will see how to declare, organize & link your modules.",source:"@site/docs/reference/koin-core/definitions.md",permalink:"/docs/reference/koin-core/definitions",editUrl:"https://github.com/pbissonho/koin.dart/tree/master/website/docs/reference/koin-core/definitions.md",sidebar:"docs",previous:{title:"Koin for Flutter",permalink:"/docs/start/getting-started/koin-for-flutter"},next:{title:"Modules",permalink:"/docs/reference/koin-core/modules"}},l=[{value:"Writing a module",id:"writing-a-module",children:[]},{value:"Defining a singleton",id:"defining-a-singleton",children:[]},{value:"Defining your component within a lambda",id:"defining-your-component-within-a-lambda",children:[]},{value:"Defining a factory",id:"defining-a-factory",children:[]},{value:"Resolving &amp; injecting dependencies",id:"resolving--injecting-dependencies",children:[]},{value:"Definition: binding an interface",id:"definition-binding-an-interface",children:[]},{value:"Additional type binding",id:"additional-type-binding",children:[]},{value:"Definition: naming &amp; default bindings",id:"definition-naming--default-bindings",children:[]},{value:"Declaring injection parameters",id:"declaring-injection-parameters",children:[]},{value:"Using definition flags",id:"using-definition-flags",children:[{value:"Create instances at start",id:"create-instances-at-start",children:[]}]}],s={rightToc:l};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"By using Koin, you describe definitions in modules. In this section we will see how to declare, organize & link your modules."),Object(o.b)("h2",{id:"writing-a-module"},"Writing a module"),Object(o.b)("p",null,"A Koin module is the space to declare all your components. Use the ",Object(o.b)("inlineCode",{parentName:"p"},"module")," function to declare a Koin module:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule = module();// your dependencies here\n// Or\nfinal myModule2 = Module();// your dependencies here\n")),Object(o.b)("p",null,"In this module, you can declare components as described below."),Object(o.b)("h2",{id:"defining-a-singleton"},"Defining a singleton"),Object(o.b)("p",null,"Declaring a singleton component means that Koin container will keep a unique instance of this definition, you describe definitions in modules. In this section we will see how to declare, organize & link your modules."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"// declare single instance for MyService class\nfinal myModule = module()..single((s) => MyService());\n")),Object(o.b)("h2",{id:"defining-your-component-within-a-lambda"},"Defining your component within a lambda"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"single"),", ",Object(o.b)("inlineCode",{parentName:"p"},"factory")," & ",Object(o.b)("inlineCode",{parentName:"p"},"scoped")," keywords help you declare your components through a lambda expression. this lambda describe\nthe way that you build your component. "),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"..single((s) => MyClass())")),Object(o.b)("p",null,"The result type of your lambda is the main type of your component"),Object(o.b)("h2",{id:"defining-a-factory"},"Defining a factory"),Object(o.b)("p",null,"A factory component declaration is a definition that will gives you a new instance each time you ask for this definition (this instance is not retrained by Koin container, as it won't inject this instance in other definitions later). Use the ",Object(o.b)("inlineCode",{parentName:"p"},"factory")," function with a lambda expression to build a component."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"class Controller {}\n\n// declare factory instance for Controller class\nfinal myModule = module()..factory((s) => Controller());\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Koin container doesn't retain factory instances as it will give a new instance each time the definition is asked"))),Object(o.b)("h2",{id:"resolving--injecting-dependencies"},"Resolving & injecting dependencies"),Object(o.b)("p",null,"Now that we can declare components definitions, we want to link instances with dependency injection. To ",Object(o.b)("em",{parentName:"p"},"resolve an instance")," in a Koin module, just use the ",Object(o.b)("inlineCode",{parentName:"p"},"get()"),"\nfunction to the requested needed component instance. This ",Object(o.b)("inlineCode",{parentName:"p"},"get()")," function is usually used into constructor, to inject constructor values."),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"To make dependency injection with Koin container, we have to write it in constructor injection style: resolve dependencies in class constructors. This way, your instance will be created with injected instances from Koin."))),Object(o.b)("p",null,"Let's take an example with several classes:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"class Service {}\n\nclass Controller {\n  final View controller;\n\n  Controller(this.controller);\n}\n\nclass View {}\n\n// declare factory instance for Controller class\nfinal myModule = module()\n  // declare Service as single instance\n  ..single((s) => Service())\n  // declare Controller as single instance, resolving View instance with get()\n  ..single((s) => Controller(s.get()));\n")),Object(o.b)("h2",{id:"definition-binding-an-interface"},"Definition: binding an interface"),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"single")," or a ",Object(o.b)("inlineCode",{parentName:"p"},"factory")," definition use the type from the their given lambda definition: i.e  ",Object(o.b)("inlineCode",{parentName:"p"},"single { T }"),"\nThe matched type of the definition is the only matched type from this expression."),Object(o.b)("p",null,"Let's take an example with a class and implemented interface:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"// Service interface\nabstract class Service {\n  void doSomething();\n}\n// Service Implementation\nclass ServiceImp implements Service {\n  void doSomething(){}\n}```\n\nIn a Koin module we can use the `as` cast Dart operator as follow:\n\n```dart\nfinal myModule = module()\n  // Will match type ServiceImp only\n  ..single((s) => ServiceImp())\n  // Will match type Service only\n  ..single((s) => ServiceImp() as Service);\n")),Object(o.b)("p",null,"You can also use the inferred type expression:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule = module()\n  // Will match type ServiceImp only\n  ..single((s) => ServiceImp())\n  // Will match type Service only\n  ..single<Service>((s) => ServiceImp());\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"This 2nd way of style declaration is preferred and will be used for the rest of the documentation."))),Object(o.b)("h2",{id:"additional-type-binding"},"Additional type binding"),Object(o.b)("p",null,"In some cases, we want to match several types from just one definition."),Object(o.b)("p",null,"Let's take an example with a class and interface:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"// Service interface\nabstract class Service {\n  void doSomething();\n}\n// Service Implementation\nclass ServiceImp implements Service {\n  void doSomething(){}\n}```\n\n\nTo make a definition bind additional types, we use the `bind` operator with a Type:\n\n```dart\nvar myModule = module()\n  // Will match types ServiceImp & Service\n  ..single((s) => ServiceImp()).bind<Service>();\n")),Object(o.b)("p",null,"Note here, that we would resolve the ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," type directly with ",Object(o.b)("inlineCode",{parentName:"p"},"get()"),". But if we have multiple definitions binding ",Object(o.b)("inlineCode",{parentName:"p"},"Service"),", we have to use the ",Object(o.b)("inlineCode",{parentName:"p"},"bind<>()")," function."),Object(o.b)("h2",{id:"definition-naming--default-bindings"},"Definition: naming & default bindings"),Object(o.b)("p",null,"You can specify a name to your definition, to help you distinguish two definitions about the same type:"),Object(o.b)("p",null,"Just request your definition with its name:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),'var myModule = module()\n  ..single<Service>((s) => ServiceImp(), qualifier: named("default"))\n  ..single<Service>((s) => ServiceImp(), qualifier: named("test"));\n\nvar service = get(named("default"));\n')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"get()")," let you specify a definition name if needed. This name is a ",Object(o.b)("inlineCode",{parentName:"p"},"qualifier")," produced by the ",Object(o.b)("inlineCode",{parentName:"p"},"named()")," function."),Object(o.b)("p",null,"By default Koin will bind a definition by its type or by its name, if the type is already bound to a definition."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),'var myModule = module()\n  ..single<Service>((s) => ServiceImpl1())\n  ..single<Service>((s) => ServiceImpl2(), qualifier: named("test"));\n')),Object(o.b)("p",null,"Then:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"var service = get()")," will trigger the ",Object(o.b)("inlineCode",{parentName:"li"},"ServiceImpl1")," definition"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},'var service = get(named("test"))()')," will trigger the ",Object(o.b)("inlineCode",{parentName:"li"},"ServiceImpl2")," definition")),Object(o.b)("h2",{id:"declaring-injection-parameters"},"Declaring injection parameters"),Object(o.b)("p",null,"In any ",Object(o.b)("inlineCode",{parentName:"p"},"single"),", ",Object(o.b)("inlineCode",{parentName:"p"},"factory")," or ",Object(o.b)("inlineCode",{parentName:"p"},"scoped")," definition, you can use injection parameter: parameters that will be injected and used by your definition:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"class MySingle {\n  final int value;\n\n  MySingle(this.value);\n}\n\nvar myModule = module()\n  ..singleWithParam<MySingle,int>((s, value) => MySingle(value));\n")),Object(o.b)("p",null,"In contrary to resolved dependencies (resolved with ",Object(o.b)("inlineCode",{parentName:"p"},"get()"),"), injection parameters are parameters passed through the resolution API.\nThis means that those parameters are values passed with ",Object(o.b)("inlineCode",{parentName:"p"},"get()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"by inject()"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"var mySingle = getWithParam<MySingle, int>(10);\n")),Object(o.b)("h2",{id:"using-definition-flags"},"Using definition flags"),Object(o.b)("p",null,"The Koin API also proposes some flags."),Object(o.b)("h3",{id:"create-instances-at-start"},"Create instances at start"),Object(o.b)("p",null,"A definition or a module can be flagged as ",Object(o.b)("inlineCode",{parentName:"p"},"createdAtStart"),", to be created at start (or when you want). First set the ",Object(o.b)("inlineCode",{parentName:"p"},"createdAtStart")," flag on your module\nor on your definition."),Object(o.b)("p",null,"CreateAtStart flag on a definition"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final moduleA = module()\n  ..single<Service>((s) => ServiceImp());\nfinal moduleB = module()\n    // eager creation for this definition\n  ..single<Service>((s) => TestServiceImp(), createdAtStart: true);\n")),Object(o.b)("p",null,"CreateAtStart flag on a module"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final moduleA = module()\n  ..single<Service>((s) => ServiceImp());\nfinal moduleB = module(createdAtStart: true)\n  ..single<Service>((s) => TestServiceImp());\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"startKoin")," function will automatically create definitions instances flagged with ",Object(o.b)("inlineCode",{parentName:"p"},"createAtStart"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"// Start Koin modules\nstartKoin((app){\n    app.modules([moduleA, moduleB]);\n});\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If you need to load some definition at a special time (in a background thread instead of UI for example), just get/inject the desired components."))))}d.isMDXComponent=!0},177:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var i=t(0),a=t.n(i);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),d=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=d(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=d(t),m=i,u=b["".concat(r,".").concat(m)]||b[m]||p[m]||o;return t?a.a.createElement(u,c(c({ref:n},s),{},{components:t})):a.a.createElement(u,c({ref:n},s))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var s=2;s<o;s++)r[s]=t[s];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);