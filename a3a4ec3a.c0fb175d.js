(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{167:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return b}));var i=t(2),o=t(9),a=(t(0),t(177)),r={title:"Definition API"},l={id:"reference/koin-core/dsl",isDocsHomePage:!1,title:"Definition API",description:"Thanks to the power of Dart language, Koin provides a flunt API to help your describe your app instead of annotate it or generate code for it. Koin offers a smart functional API to achieve to prepare your dependency injection.",source:"@site/docs/reference/koin-core/dsl.md",permalink:"/docs/reference/koin-core/dsl",editUrl:"https://github.com/pbissonho/koin.dart/tree/master/website/docs/reference/koin-core/dsl.md"},c=[{value:"Application &amp; Module API",id:"application--module-api",children:[]},{value:"Application",id:"application",children:[]},{value:"KoinApplication instance: Global vs Local",id:"koinapplication-instance-global-vs-local",children:[]},{value:"Starting Koin",id:"starting-koin",children:[]},{value:"Module DSL",id:"module-dsl",children:[{value:"Writing a module",id:"writing-a-module",children:[]}]}],p={rightToc:c};function b(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Thanks to the power of Dart language, Koin provides a flunt API to help your describe your app instead of annotate it or generate code for it. Koin offers a smart functional API to achieve to prepare your dependency injection."),Object(a.b)("h2",{id:"application--module-api"},"Application & Module API"),Object(a.b)("p",null,"Koin offers several keywords to let you describe the elements of a Koin Application:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Application, to describe the Koin container configuration"),Object(a.b)("li",{parentName:"ul"},"Module, to describe the components that have to be injected")),Object(a.b)("h2",{id:"application"},"Application"),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"KoinApplication")," instance is a Koin container instance configuration. This will let your configure logging, properties loading and modules."),Object(a.b)("p",null,"To build a new ",Object(a.b)("inlineCode",{parentName:"p"},"KoinApplication"),", use the following functions:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"koinApplication()")," - create a ",Object(a.b)("inlineCode",{parentName:"li"},"KoinApplication")," container configuration "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"startKoin()")," - create a ",Object(a.b)("inlineCode",{parentName:"li"},"KoinApplication")," container configuration and register it in the ",Object(a.b)("inlineCode",{parentName:"li"},"GlobalContext")," to allow the use of GlobalContext API")),Object(a.b)("p",null,"To configure your ",Object(a.b)("inlineCode",{parentName:"p"},"KoinApplication")," instance, you can use any of the following functions:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"logger( )")," - describe what level and Logger implementation to use (by default use the EmptyLogger)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"modules( )")," - set a list of Koin modules to load in the container")),Object(a.b)("h2",{id:"koinapplication-instance-global-vs-local"},"KoinApplication instance: Global vs Local"),Object(a.b)("p",null,"As you can see above, we can describe a Koin container configuration in 2 ways: ",Object(a.b)("inlineCode",{parentName:"p"},"koinApplication")," or ",Object(a.b)("inlineCode",{parentName:"p"},"startKoin")," function. "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"koinApplication")," describe a Koin container instance"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"startKoin")," describe a Koin container instance and register it in Koin ",Object(a.b)("inlineCode",{parentName:"li"},"GlobalContext"))),Object(a.b)("p",null,"By registering your container configuration into the ",Object(a.b)("inlineCode",{parentName:"p"},"GlobalContext"),", the global API can use it directly. Any ",Object(a.b)("inlineCode",{parentName:"p"},"KoinComponent")," refers to a ",Object(a.b)("inlineCode",{parentName:"p"},"Koin")," instance. By default we use the one from ",Object(a.b)("inlineCode",{parentName:"p"},"GlobalContext"),"."),Object(a.b)("p",null,"Check chapters about Custom Koin instance for more information."),Object(a.b)("h2",{id:"starting-koin"},"Starting Koin"),Object(a.b)("p",null,"Starting Koin means run a ",Object(a.b)("inlineCode",{parentName:"p"},"KoinApplication")," instance into the ",Object(a.b)("inlineCode",{parentName:"p"},"GlobalContext"),"."),Object(a.b)("p",null,"To start Koin container with modules, we can just use the ",Object(a.b)("inlineCode",{parentName:"p"},"startKoin")," function like that:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"// start a KoinApplication in Global context\nstartKoin((app){\n    // declare used logger\n    app.logger(EmptyLogger(Level.debug));\n    // declare used modules\n    app.modules([moduleA, moduleB]);\n});\n")),Object(a.b)("h2",{id:"module-dsl"},"Module DSL"),Object(a.b)("p",null,"A Koin module gather definitions that you will inject/combine for your application. To create a new module, just use the following function:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"module { // module content }")," - create a Koin Module")),Object(a.b)("p",null,"To describe your content in a module, you can use the following functions:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"factory((s) => //MyClass())")," - provide a factory bean definition"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"single((s) => //MyClass()) - provide a singleton bean definition (also aliased as "),"bean`)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"get()")," - resolve a component dependency (also can use name, scope or parameters)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"bind()")," - add type to bind for given bean definition"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"binds()")," - add types array for given bean definition"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"scope((scope){// scope group})")," - define a logical group for ",Object(a.b)("inlineCode",{parentName:"li"},"scoped")," definition "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"scoped((s) => //MyClass())"),"- provide a bean definition that will exists only in a scope")),Object(a.b)("p",null,"Note: the ",Object(a.b)("inlineCode",{parentName:"p"},"named()")," function allow you to give a qualifier either by a string, an enum or a type. It is used to name your definitions."),Object(a.b)("h3",{id:"writing-a-module"},"Writing a module"),Object(a.b)("p",null,"A Koin Module class is the space to declare all your components. Use the ",Object(a.b)("inlineCode",{parentName:"p"},"module")," function or the ",Object(a.b)("inlineCode",{parentName:"p"},"Module"),"constructor to declare a Koin module:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule = module()// your dependencies here;\n")),Object(a.b)("p",null,"In this module, you can declare components as decribed below."))}b.isMDXComponent=!0},177:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var i=t(0),o=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=o.a.createContext({}),b=function(e){var n=o.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=b(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},s=o.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=b(t),s=i,m=u["".concat(r,".").concat(s)]||u[s]||d[s]||a;return t?o.a.createElement(m,l(l({ref:n},p),{},{components:t})):o.a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var p=2;p<a;p++)r[p]=t[p];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);