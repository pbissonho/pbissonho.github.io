(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{160:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return d}));var i=t(2),a=t(9),o=(t(0),t(177)),r={title:"Modules Definitions"},l={id:"start/getting-started/modules-definitions",isDocsHomePage:!1,title:"Modules Definitions",description:"Writing definitions in Koin is done via Dart functions, that describe ishow is built your instance. Once you have configured your Koin application, let's write some modules and definitions.",source:"@site/docs/start/getting-started/modules-definitions.md",permalink:"/docs/start/getting-started/modules-definitions",editUrl:"https://github.com/pbissonho/koin.dart/tree/master/website/docs/start/getting-started/modules-definitions.md",sidebar:"docs",previous:{title:"Start Koin",permalink:"/docs/start/getting-started/starting-koin"},next:{title:"Koin Components",permalink:"/docs/start/getting-started/koin-components"}},c=[{value:"Module &amp; definitions",id:"module--definitions",children:[]},{value:"Qualifiers",id:"qualifiers",children:[]},{value:"Additional types",id:"additional-types",children:[]},{value:"Combining several modules",id:"combining-several-modules",children:[]},{value:"Loading after start",id:"loading-after-start",children:[]},{value:"Dropping definitions",id:"dropping-definitions",children:[]},{value:"Declare on the fly",id:"declare-on-the-fly",children:[]},{value:"Recap",id:"recap",children:[]}],s={rightToc:c};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Writing definitions in Koin is done via Dart functions, that describe ishow is built your instance. Once you have configured your Koin application, let's write some modules and definitions."),Object(o.b)("h2",{id:"module--definitions"},"Module & definitions"),Object(o.b)("p",null,"Given some classes that we need to inject:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"class HttpClient {\n  final String url;\n\n  HttpClient(this.url);\n}\n\nclass DataRepository {\n    final HttpClient httpClient;\n\n  DataRepository(this.httpClient);\n}\nclass Bloc {\n  final DataRepository dataRepository;\n\n  Bloc(this.dataRepository);\n}\n")),Object(o.b)("p",null,"Here how we could define some components:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule = Module()\n  // Define a singleton for type HttpClient\n  ..single<HttpClient>(((s) => HttpClient('server_url')))\n  // Define a singleton for type  DataRepository\n  // Resolve the HttpClient dependency with s.get()\n  ..single<DataRepository>(((s) => DataRepository(s.get())))\n  // Define a factory (create a new instance each time) for type Bloc (infered parameter in <>)\n  // Resolve the DataRepository dependency with s.get()\n  ..factory<Bloc>(((s) => Bloc(s.get())));\n")),Object(o.b)("h2",{id:"qualifiers"},"Qualifiers"),Object(o.b)("p",null,"You can give a qualifier to a component. This qualifier can be a string or a type, and is setup with the ",Object(o.b)("inlineCode",{parentName:"p"},"named()")," function:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule = Module()\n    // Define a single Bloc named 'single'\n  ..single<Bloc>(((s) => Bloc(s.get())), qualifier: named('single'))\n   // Define a factory for type Bloc\n  ..factory<Bloc>(((s) => Bloc(s.get())));\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"This qualifier can be associated to a class or directly to a type:")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"class MyClass {\n\n}\n// Type qualifier\n..single<DataRepository>(((s) => DataRepository(s.get())), qualifier: named<MyClass>())\n\n// String qualifier\n..single<DataRepository>(((s) => DataRepository(s.get())), qualifier: named('single'))\n")),Object(o.b)("h2",{id:"additional-types"},"Additional types"),Object(o.b)("p",null,"In the module API, for a definition, you can give some extra type to bind, with the ",Object(o.b)("inlineCode",{parentName:"p"},"bind")," operator (",Object(o.b)("inlineCode",{parentName:"p"},"binds")," for list of Class):"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"\nclass Component1Interface {}\n\nclass Component1 implements Component1Interface {}\n\nfinal myModule = Module()\n  ..single<Component1>(((s) => Component1())).bind<Component1Interface>();\n")),Object(o.b)("p",null,"Then you can request your instance with ",Object(o.b)("inlineCode",{parentName:"p"},"get<Component1>()")," or ",Object(o.b)("inlineCode",{parentName:"p"},"get<ComponentInterface1>()"),"."),Object(o.b)("p",null,"You can bind multiple definitions with the same type:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule = Module()\n  ..single<Component1>(((s) => Component1())).bind<Component1Interface>()\n  ..single<Component2>(((s) => Component2())).bind<Component1Interface>();\n")),Object(o.b)("p",null,"But here you won't be able to request an instance with ",Object(o.b)("inlineCode",{parentName:"p"},"get<ComponentInterface1>()"),". You will have to use ",Object(o.b)("inlineCode",{parentName:"p"},"koin.bind<Component1,ComponentInterface1>()")," to retrieve an instance of ",Object(o.b)("inlineCode",{parentName:"p"},"ComponentInterface1"),", with the ",Object(o.b)("inlineCode",{parentName:"p"},"Component1")," implementation."),Object(o.b)("p",null,"Note that you cal also look for all components binding a given type: ",Object(o.b)("inlineCode",{parentName:"p"},"getAll<ComponentInterface1>()")," will request all instances binding ",Object(o.b)("inlineCode",{parentName:"p"},"ComponentInterface1")," type."),Object(o.b)("h2",{id:"combining-several-modules"},"Combining several modules"),Object(o.b)("p",null,"There is no concept of import in Koin. Just combine several complementary modules definitions."),Object(o.b)("p",null,"Let's dispatch definitions in 2 modules:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"final myModule1 = Module()\n  ..single<HttpClient>(((s) => HttpClient('server_url')))\n  ..single<DataRepository>(((s) => DataRepository(s.get())));\n\nfinal myModule2 = Module()..factory<Bloc>(((s) => Bloc(s.get())));\n")),Object(o.b)("p",null,"We just need to list them for Koin:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"startKoin((app){\n    app.modules([myModule1, myModule2]);\n  });\n")),Object(o.b)("h2",{id:"loading-after-start"},"Loading after start"),Object(o.b)("p",null,"After Koin has been started with ",Object(o.b)("inlineCode",{parentName:"p"},"startKoin { }")," function, it is possible to load extra definitions modules with the following function: ",Object(o.b)("inlineCode",{parentName:"p"},"loadKoinModules(modules...)")),Object(o.b)("h2",{id:"dropping-definitions"},"Dropping definitions"),Object(o.b)("p",null,"Once a modules has been loaded into Koin, we can unload it and then drop definitions and instances, related to those definitions. for this we use the ",Object(o.b)("inlineCode",{parentName:"p"},"unloadKoinModules(modules...)")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"void main() {\n  var koin = startKoin((app) {\n    app.modules([myModule]);\n  }).koin;\n\n  koin.getWithParam<MySingle>(45); // -> id is 45\n  unloadKoinModule(myModule);\n  loadKoinModule(myModule);\n\n  koin.getWithParam<MySingle>(40); // -> id is 40\n}\n")),Object(o.b)("h2",{id:"declare-on-the-fly"},"Declare on the fly"),Object(o.b)("p",null,"Allows you to declare an instance on the fly with Koin already initialized or in a scope already created."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"void main() {\n  // no def\n  var koin = startKoin((app) {}).koin;\n\n  // Create an instance\n  var component = Component1();\n\n  // declare it\n  koin.declare(component);\n\n  // retrieve it\n  expect(component, koin.get<Component1>());\n}\n")),Object(o.b)("p",null,"You can also use a qualifier or secondary types to help create your definition:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"koin.declare(component, qualifier: named('qualifier'), secondaryTypes: []);\n")),Object(o.b)("h2",{id:"recap"},"Recap"),Object(o.b)("p",null,"A quick recap of the Koin keywords:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"module()")," - create a Koin Module or a submodule (inside a module)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"factory()")," - provide a factory bean definition"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"single()")," - provide a single bean definition"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"get()")," - resolve a component dependency"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"named()")," - define a qualifier with type, enum or string"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"bind()")," - additional Dart type binding for given bean definition"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"binds()")," - list of additional Dart types binding for given bean definition")))}d.isMDXComponent=!0},177:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var i=t(0),a=t.n(i);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),d=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(t),u=i,m=p["".concat(r,".").concat(u)]||p[u]||b[u]||o;return t?a.a.createElement(m,l(l({ref:n},s),{},{components:t})):a.a.createElement(m,l({ref:n},s))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=t[s];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);